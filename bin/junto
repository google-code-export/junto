#!/bin/bash

JARS=`echo $JUNTO_DIR/lib/*.jar $JUNTO_DIR/target/*.jar $JUNTO_DIR/lib_managed/compile/*.jar | tr ' ' ':'`
SCALA_LIB="$JUNTO_DIR/project/boot/scala-2.9.1/lib/scala-library.jar"

JARS_MANAGED=
if [ -e $JUNTO_DIR/lib_managed ]
then
    JARS_MANAGED=`find $JUNTO_DIR/lib_managed -name '*.jar' -print | tr '\n' ':'`
fi


CP=$JUNTO_DIR/target/classes:$JARS:$JARS_MANAGED:$SCALA_LIB:$CLASSPATH

if [ -z $JAVA_MEM_FLAG ] 
then
    JAVA_MEM_FLAG=-Xmx2g
fi

JAVA_COMMAND="java $JAVA_MEM_FLAG -classpath $CP"

CMD=$1
shift

help()
{
cat <<EOF
Junto 1.2.0 commands: 

  build         build Junto with SBT
  config  	run Junto on the specified config file
  extract       extract distributions from Junto output
  run           run the main method of a given class

Include --help with any option for more information
EOF
}

if [ $CMD = 'build' ]; then

    if test -f ~/.sbtconfig; then
	. ~/.sbtconfig
    fi
    java -Dfile.encoding=UTF8 -Xmx1536M -Xss1M -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=256m ${SBT_OPTS} -jar $JUNTO_DIR/bin/sbt-launch.jar "$@"

else 

    CLASS=

    case $CMD in
	config) CLASS=upenn.junto.app.JuntoConfigRunner;;
	extract) CLASS=upenn.junto.app.OutputExtractor;;
	run) CLASS=$1; shift;;
	help) help; exit 1;;
	*) echo "Unrecognized command: $CMD"; help; exit 1;;
    esac

    $JAVA_COMMAND $CLASS $*

fi


